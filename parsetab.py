
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftORleftANDleftNOTnonassocMAYQMENQMAYEQUALSMENEQUALSIGUALDADDIFERENCIAleftMASMENOSleftPORDIVMODrightUMENOSrightPOTAND CADENA CHAR COMA COMENTARIO_SIMPLE COMENTARIO_VARIAS_LINEAS DECIMAL DIFERENCIA DIV DOBLEPUNTO ENTERO ID IGUAL IGUALDAD MAS MAYEQUALS MAYQ MENEQUALS MENOS MENQ MOD NOT OR PARCLS PAROP POR POT PTOCOMA TK_BOOL TK_BREAK TK_CHAR TK_CONTINUE TK_ELSE TK_ELSEIF TK_END TK_FALSE TK_FLOAT64 TK_FUNCTION TK_IF TK_INT64 TK_PRINT TK_PRINTLN TK_STRING TK_TRUE TK_WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion  : ins_print\n                    | ins_println\n                    | ins_if\n                    | ins_break\n                    | ins_continue\n                    | ins_while\n                    | ins_asignacion\n                    | ins_decla_funcion\n                    | ins_llamada_funcion PTOCOMA\n                    | COMENTARIO_VARIAS_LINEAS\n                    | COMENTARIO_SIMPLE\n    ins_llamada_funcion     : ID PAROP PARCLSins_llamada_funcion     : ID PAROP params_call PARCLSparams_call     : params_call COMA param_callparams_call    : param_callparam_call     : expresionins_decla_funcion : TK_FUNCTION ID PAROP PARCLS instrucciones TK_END PTOCOMAins_decla_funcion : TK_FUNCTION ID PAROP params PARCLS instrucciones TK_END PTOCOMAparams     : params COMA paramparams    : paramparam     : ID DOBLEPUNTO tipos_insparam     : ID ins_continue : TK_CONTINUE PTOCOMAins_break : TK_BREAK PTOCOMAins_while     : TK_WHILE expresion instrucciones TK_END PTOCOMAins_if     : TK_IF expresion instrucciones TK_END PTOCOMAins_if     : TK_IF expresion instrucciones TK_ELSE instrucciones TK_END PTOCOMAins_if     : TK_IF expresion instrucciones ins_elseif TK_END PTOCOMAins_elseif     : TK_ELSEIF expresion instruccionesins_elseif     : TK_ELSEIF expresion instrucciones ins_elseifins_elseif     : TK_ELSEIF expresion instrucciones TK_ELSE instruccionesins_asignacion    : ID IGUAL expresion PTOCOMAins_asignacion    : ID IGUAL expresion DOBLEPUNTO tipos_ins PTOCOMAtipos_ins : TK_INT64\n                | TK_FLOAT64\n                | TK_CHAR\n                | TK_STRING\n                | TK_BOOL\n    ins_print   : TK_PRINT PAROP expresion PARCLS PTOCOMAins_println   : TK_PRINTLN PAROP expresion PARCLS PTOCOMA\n    expresion : expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion POR expresion\n            | expresion DIV expresion\n            | expresion POT expresion\n            | expresion MOD expresion\n            | expresion MENQ expresion\n            | expresion MENEQUALS expresion\n            | expresion MAYQ expresion\n            | expresion MAYEQUALS expresion\n            | expresion IGUALDAD expresion\n            | expresion DIFERENCIA expresion\n            | expresion AND expresion\n            | expresion OR expresion\n            | expresion COMA expresion\n    \n    expresion : MENOS expresion %prec UMENOS\n            | NOT expresion %prec NOT\n     expresion :   PAROP expresion PARCLS expresion : ENTEROexpresion : TK_TRUE\n                | TK_FALSEexpresion : DECIMALexpresion : IDexpresion : CADENAexpresion : CHAR'
    
_lr_action_items = {'COMENTARIO_VARIAS_LINEAS':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,13,-62,-63,-64,-65,-66,-67,-68,-27,-26,13,13,-59,-60,13,13,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,13,-42,-43,-29,13,13,-28,13,13,-31,13,-36,13,-30,13,-20,13,-21,]),'COMENTARIO_SIMPLE':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,14,-62,-63,-64,-65,-66,-67,-68,-27,-26,14,14,-59,-60,14,14,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,14,-42,-43,-29,14,14,-28,14,14,-31,14,-36,14,-30,14,-20,14,-21,]),'TK_PRINT':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,15,-62,-63,-64,-65,-66,-67,-68,-27,-26,15,15,-59,-60,15,15,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,15,-42,-43,-29,15,15,-28,15,15,-31,15,-36,15,-30,15,-20,15,-21,]),'TK_PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,16,-62,-63,-64,-65,-66,-67,-68,-27,-26,16,16,-59,-60,16,16,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,16,-42,-43,-29,16,16,-28,16,16,-31,16,-36,16,-30,16,-20,16,-21,]),'TK_IF':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,17,-62,-63,-64,-65,-66,-67,-68,-27,-26,17,17,-59,-60,17,17,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,17,-42,-43,-29,17,17,-28,17,17,-31,17,-36,17,-30,17,-20,17,-21,]),'TK_BREAK':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,18,-62,-63,-64,-65,-66,-67,-68,-27,-26,18,18,-59,-60,18,18,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,18,-42,-43,-29,18,18,-28,18,18,-31,18,-36,18,-30,18,-20,18,-21,]),'TK_CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,19,-62,-63,-64,-65,-66,-67,-68,-27,-26,19,19,-59,-60,19,19,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,19,-42,-43,-29,19,19,-28,19,19,-31,19,-36,19,-30,19,-20,19,-21,]),'TK_WHILE':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,20,-62,-63,-64,-65,-66,-67,-68,-27,-26,20,20,-59,-60,20,20,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,20,-42,-43,-29,20,20,-28,20,20,-31,20,-36,20,-30,20,-20,20,-21,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,13,14,17,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,98,100,103,104,105,106,108,109,118,119,120,122,123,124,127,129,131,132,134,135,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,35,35,43,-2,-12,35,35,21,35,35,35,-62,-63,-64,-65,-66,-67,-68,-27,-26,21,35,35,21,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-59,-60,21,99,21,35,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,35,21,-42,-43,-29,21,21,-28,21,21,99,-31,21,-36,21,-30,21,-20,21,-21,]),'TK_FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,13,14,23,24,27,31,32,33,34,35,36,37,38,39,40,46,62,63,65,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,100,103,104,105,106,108,109,118,119,122,123,124,127,129,131,132,134,135,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,22,-62,-63,-64,-65,-66,-67,-68,-27,-26,22,22,-59,-60,22,22,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-35,22,-42,-43,-29,22,22,-28,22,22,-31,22,-36,22,-30,22,-20,22,-21,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,14,23,24,38,39,95,103,104,105,109,122,124,129,132,135,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,-27,-26,-35,-42,-43,-29,-28,-31,-36,-30,-20,-21,]),'TK_END':([3,4,5,6,7,8,9,10,11,13,14,23,24,38,39,46,65,76,95,103,104,105,106,109,118,122,123,124,127,129,130,132,134,135,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,-27,-26,74,94,107,-35,-42,-43,-29,121,-28,126,-31,-32,-36,133,-30,-33,-20,-34,-21,]),'TK_ELSE':([3,4,5,6,7,8,9,10,11,13,14,23,24,38,39,46,95,103,104,105,109,122,123,124,129,132,135,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,-27,-26,75,-35,-42,-43,-29,-28,-31,131,-36,-30,-20,-21,]),'TK_ELSEIF':([3,4,5,6,7,8,9,10,11,13,14,23,24,38,39,46,95,103,104,105,109,122,123,124,129,132,135,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-2,-12,-27,-26,77,-35,-42,-43,-29,-28,-31,77,-36,-30,-20,-21,]),'PTOCOMA':([12,18,19,31,32,33,34,35,36,37,62,63,66,67,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,107,110,111,112,113,114,115,121,126,133,],[24,38,39,-62,-63,-64,-65,-66,-67,-68,-59,-60,95,-15,103,104,105,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,109,-16,122,124,-37,-38,-39,-40,-41,129,132,135,]),'PAROP':([15,16,17,20,21,25,26,28,29,30,41,42,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[25,26,30,30,42,30,30,30,30,30,30,30,71,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'MENOS':([17,20,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,108,],[28,28,28,28,48,28,28,28,-62,-63,-64,-65,-66,-67,-68,48,28,28,48,48,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-59,48,48,48,48,28,-44,-45,-46,-47,-48,-49,48,48,48,48,48,48,48,48,48,-61,28,48,]),'NOT':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ENTERO':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TK_TRUE':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TK_FALSE':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'DECIMAL':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'CADENA':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'CHAR':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'IGUAL':([21,],[41,]),'MAS':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[47,-62,-63,-64,-65,-66,-67,-68,47,47,47,-59,47,47,47,47,-44,-45,-46,-47,-48,-49,47,47,47,47,47,47,47,47,47,-61,47,]),'POR':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[49,-62,-63,-64,-65,-66,-67,-68,49,49,49,-59,49,49,49,49,49,49,-46,-47,-48,-49,49,49,49,49,49,49,49,49,49,-61,49,]),'DIV':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[50,-62,-63,-64,-65,-66,-67,-68,50,50,50,-59,50,50,50,50,50,50,-46,-47,-48,-49,50,50,50,50,50,50,50,50,50,-61,50,]),'POT':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[51,-62,-63,-64,-65,-66,-67,-68,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-61,51,]),'MOD':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[52,-62,-63,-64,-65,-66,-67,-68,52,52,52,-59,52,52,52,52,52,52,-46,-47,-48,-49,52,52,52,52,52,52,52,52,52,-61,52,]),'MENQ':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[53,-62,-63,-64,-65,-66,-67,-68,53,53,53,-59,53,53,53,53,-44,-45,-46,-47,-48,-49,None,None,None,None,None,None,53,53,53,-61,53,]),'MENEQUALS':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[54,-62,-63,-64,-65,-66,-67,-68,54,54,54,-59,54,54,54,54,-44,-45,-46,-47,-48,-49,None,None,None,None,None,None,54,54,54,-61,54,]),'MAYQ':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[55,-62,-63,-64,-65,-66,-67,-68,55,55,55,-59,55,55,55,55,-44,-45,-46,-47,-48,-49,None,None,None,None,None,None,55,55,55,-61,55,]),'MAYEQUALS':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[56,-62,-63,-64,-65,-66,-67,-68,56,56,56,-59,56,56,56,56,-44,-45,-46,-47,-48,-49,None,None,None,None,None,None,56,56,56,-61,56,]),'IGUALDAD':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[57,-62,-63,-64,-65,-66,-67,-68,57,57,57,-59,57,57,57,57,-44,-45,-46,-47,-48,-49,None,None,None,None,None,None,57,57,57,-61,57,]),'DIFERENCIA':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[58,-62,-63,-64,-65,-66,-67,-68,58,58,58,-59,58,58,58,58,-44,-45,-46,-47,-48,-49,None,None,None,None,None,None,58,58,58,-61,58,]),'AND':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[59,-62,-63,-64,-65,-66,-67,-68,59,59,59,-59,-60,59,59,59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,59,59,-61,59,]),'OR':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,108,],[60,-62,-63,-64,-65,-66,-67,-68,60,60,60,-59,-60,60,60,60,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,60,-61,60,]),'COMA':([27,31,32,33,34,35,36,37,40,44,45,62,63,64,66,68,69,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,108,111,112,113,114,115,116,125,128,],[61,-62,-63,-64,-65,-66,-67,-68,61,61,61,-59,-60,61,61,98,-18,61,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,61,-61,-25,120,-23,61,-37,-38,-39,-40,-41,-17,-24,-22,]),'PARCLS':([31,32,33,34,35,36,37,42,44,45,62,63,64,68,69,70,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,111,112,113,114,115,116,125,128,],[-62,-63,-64,-65,-66,-67,-68,67,72,73,-59,-60,93,97,-18,-19,100,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,-25,119,-23,-37,-38,-39,-40,-41,-17,-24,-22,]),'DOBLEPUNTO':([31,32,33,34,35,36,37,62,63,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,],[-62,-63,-64,-65,-66,-67,-68,-59,-60,96,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-61,117,]),'TK_INT64':([96,117,],[111,111,]),'TK_FLOAT64':([96,117,],[112,112,]),'TK_CHAR':([96,117,],[113,113,]),'TK_STRING':([96,117,],[114,114,]),'TK_BOOL':([96,117,],[115,115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,27,40,75,100,108,119,131,],[2,46,65,106,118,123,127,134,]),'instruccion':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[3,23,3,3,23,23,3,3,23,3,23,3,23,23,3,23,]),'ins_print':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'ins_println':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ins_if':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'ins_break':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ins_continue':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ins_while':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ins_asignacion':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ins_decla_funcion':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ins_llamada_funcion':([0,2,27,40,46,65,75,100,106,108,118,119,123,127,131,134,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expresion':([17,20,25,26,28,29,30,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,98,],[27,40,44,45,62,63,64,66,70,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,108,70,]),'params_call':([42,],[68,]),'param_call':([42,98,],[69,116,]),'ins_elseif':([46,123,],[76,130,]),'params':([71,],[101,]),'param':([71,120,],[102,128,]),'tipos_ins':([96,117,],[110,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','Gramatica.py',188),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','Gramatica.py',192),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','Gramatica.py',200),
  ('instruccion -> ins_print','instruccion',1,'p_instruccion','Gramatica.py',209),
  ('instruccion -> ins_println','instruccion',1,'p_instruccion','Gramatica.py',210),
  ('instruccion -> ins_if','instruccion',1,'p_instruccion','Gramatica.py',211),
  ('instruccion -> ins_break','instruccion',1,'p_instruccion','Gramatica.py',212),
  ('instruccion -> ins_continue','instruccion',1,'p_instruccion','Gramatica.py',213),
  ('instruccion -> ins_while','instruccion',1,'p_instruccion','Gramatica.py',214),
  ('instruccion -> ins_asignacion','instruccion',1,'p_instruccion','Gramatica.py',215),
  ('instruccion -> ins_decla_funcion','instruccion',1,'p_instruccion','Gramatica.py',216),
  ('instruccion -> ins_llamada_funcion PTOCOMA','instruccion',2,'p_instruccion','Gramatica.py',217),
  ('instruccion -> COMENTARIO_VARIAS_LINEAS','instruccion',1,'p_instruccion','Gramatica.py',218),
  ('instruccion -> COMENTARIO_SIMPLE','instruccion',1,'p_instruccion','Gramatica.py',219),
  ('ins_llamada_funcion -> ID PAROP PARCLS','ins_llamada_funcion',3,'p_llamada_de_funcion','Gramatica.py',231),
  ('ins_llamada_funcion -> ID PAROP params_call PARCLS','ins_llamada_funcion',4,'p_llamada_de_fincion_parametros','Gramatica.py',235),
  ('params_call -> params_call COMA param_call','params_call',3,'p_params_llamada','Gramatica.py',239),
  ('params_call -> param_call','params_call',1,'p_parametros_llamadas_parametro_llamada','Gramatica.py',244),
  ('param_call -> expresion','param_call',1,'p_parametro_llamada','Gramatica.py',248),
  ('ins_decla_funcion -> TK_FUNCTION ID PAROP PARCLS instrucciones TK_END PTOCOMA','ins_decla_funcion',7,'p_declara_functions','Gramatica.py',254),
  ('ins_decla_funcion -> TK_FUNCTION ID PAROP params PARCLS instrucciones TK_END PTOCOMA','ins_decla_funcion',8,'p_declara_functions2','Gramatica.py',258),
  ('params -> params COMA param','params',3,'p_params_parametros','Gramatica.py',262),
  ('params -> param','params',1,'p_params_parametro','Gramatica.py',267),
  ('param -> ID DOBLEPUNTO tipos_ins','param',3,'p_parametro','Gramatica.py',271),
  ('param -> ID','param',1,'p_parametro2','Gramatica.py',275),
  ('ins_continue -> TK_CONTINUE PTOCOMA','ins_continue',2,'p_continue','Gramatica.py',281),
  ('ins_break -> TK_BREAK PTOCOMA','ins_break',2,'p_break','Gramatica.py',287),
  ('ins_while -> TK_WHILE expresion instrucciones TK_END PTOCOMA','ins_while',5,'p_sentencia_while','Gramatica.py',293),
  ('ins_if -> TK_IF expresion instrucciones TK_END PTOCOMA','ins_if',5,'p_if','Gramatica.py',298),
  ('ins_if -> TK_IF expresion instrucciones TK_ELSE instrucciones TK_END PTOCOMA','ins_if',7,'p_if_else','Gramatica.py',302),
  ('ins_if -> TK_IF expresion instrucciones ins_elseif TK_END PTOCOMA','ins_if',6,'p_if_elseif','Gramatica.py',306),
  ('ins_elseif -> TK_ELSEIF expresion instrucciones','ins_elseif',3,'p_if_elseif2','Gramatica.py',310),
  ('ins_elseif -> TK_ELSEIF expresion instrucciones ins_elseif','ins_elseif',4,'p_if_elseif3','Gramatica.py',314),
  ('ins_elseif -> TK_ELSEIF expresion instrucciones TK_ELSE instrucciones','ins_elseif',5,'p_if_elseif4','Gramatica.py',318),
  ('ins_asignacion -> ID IGUAL expresion PTOCOMA','ins_asignacion',4,'p_asignacion_ins','Gramatica.py',324),
  ('ins_asignacion -> ID IGUAL expresion DOBLEPUNTO tipos_ins PTOCOMA','ins_asignacion',6,'p_asignacion_ins2','Gramatica.py',328),
  ('tipos_ins -> TK_INT64','tipos_ins',1,'p_tipos_ins','Gramatica.py',332),
  ('tipos_ins -> TK_FLOAT64','tipos_ins',1,'p_tipos_ins','Gramatica.py',333),
  ('tipos_ins -> TK_CHAR','tipos_ins',1,'p_tipos_ins','Gramatica.py',334),
  ('tipos_ins -> TK_STRING','tipos_ins',1,'p_tipos_ins','Gramatica.py',335),
  ('tipos_ins -> TK_BOOL','tipos_ins',1,'p_tipos_ins','Gramatica.py',336),
  ('ins_print -> TK_PRINT PAROP expresion PARCLS PTOCOMA','ins_print',5,'p_print_produ','Gramatica.py',352),
  ('ins_println -> TK_PRINTLN PAROP expresion PARCLS PTOCOMA','ins_println',5,'p_println_produ','Gramatica.py',356),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_doble','Gramatica.py',363),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_doble','Gramatica.py',364),
  ('expresion -> expresion POR expresion','expresion',3,'p_exp_doble','Gramatica.py',365),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_doble','Gramatica.py',366),
  ('expresion -> expresion POT expresion','expresion',3,'p_exp_doble','Gramatica.py',367),
  ('expresion -> expresion MOD expresion','expresion',3,'p_exp_doble','Gramatica.py',368),
  ('expresion -> expresion MENQ expresion','expresion',3,'p_exp_doble','Gramatica.py',369),
  ('expresion -> expresion MENEQUALS expresion','expresion',3,'p_exp_doble','Gramatica.py',370),
  ('expresion -> expresion MAYQ expresion','expresion',3,'p_exp_doble','Gramatica.py',371),
  ('expresion -> expresion MAYEQUALS expresion','expresion',3,'p_exp_doble','Gramatica.py',372),
  ('expresion -> expresion IGUALDAD expresion','expresion',3,'p_exp_doble','Gramatica.py',373),
  ('expresion -> expresion DIFERENCIA expresion','expresion',3,'p_exp_doble','Gramatica.py',374),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_doble','Gramatica.py',375),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_doble','Gramatica.py',376),
  ('expresion -> expresion COMA expresion','expresion',3,'p_exp_doble','Gramatica.py',377),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_simple','Gramatica.py',414),
  ('expresion -> NOT expresion','expresion',2,'p_exp_simple','Gramatica.py',415),
  ('expresion -> PAROP expresion PARCLS','expresion',3,'p_expresion_agrupacion','Gramatica.py',423),
  ('expresion -> ENTERO','expresion',1,'p_exp_int','Gramatica.py',427),
  ('expresion -> TK_TRUE','expresion',1,'p_exp_bool','Gramatica.py',431),
  ('expresion -> TK_FALSE','expresion',1,'p_exp_bool','Gramatica.py',432),
  ('expresion -> DECIMAL','expresion',1,'p_exp_float','Gramatica.py',439),
  ('expresion -> ID','expresion',1,'p_expresion_identificador','Gramatica.py',443),
  ('expresion -> CADENA','expresion',1,'p_primitivo_cadena','Gramatica.py',447),
  ('expresion -> CHAR','expresion',1,'p_primitivo_char','Gramatica.py',451),
]
